<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/jourActuel"
    android:layout_width="match_parent"
    android:layout_height="200dp"
    android:background="#000" >

    <TextView
        android:id="@+id/dayConditionNow"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentRight="true"
        android:layout_alignParentTop="true"
        android:layout_margin="5dp"
        android:layout_marginLeft="0dp"
        android:paddingLeft="5dp"
        android:shadowColor="#444"
        android:shadowDx="1"
        android:shadowDy="1"
        android:shadowRadius="1"
        android:text="Apocalyptique"
        android:textColor="#FFF"
        android:textSize="40sp"
        android:textStyle="bold" />

    <ImageView
        android:id="@+id/dayIconNow"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_below="@id/dayConditionNow"
        android:paddingLeft="30dp"
        android:paddingRight="30dp"
        android:src="@drawable/fire" />

    <!-- On voit ici un exemple plus avancé où
    un LinearLayout est utilisé dans un RelativeLayout
    pour plus facilement insérer une série de
    TextViews verticalement. Ce genre de structure
    est recommandé, car il est généralement plus
    clair et concis tout en offrant un meilleur contrôle. -->
    <LinearLayout
        android:id="@+id/dayDataNow"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_alignParentRight="true"
        android:layout_below="@+id/dayConditionNow"
        android:layout_marginTop="5dp"
        android:layout_toRightOf="@+id/dayIconNow"
        android:gravity="fill_vertical"
        android:orientation="vertical" >

        <!-- Les trois TextView suivants utilisent le
        concept de style. Un style est effectivement
        une manière de réutiliser un ou plusieurs
        paramètres dans plusieurs éléments différents.
        Les styles sont définis dans les fichiers XML
        de type "values". Dès que plusieurs éléments
        réutilisent un certain nombre de propriétés
        identiques, il est généralement plus approprié
        d'utiliser un style.
        
        On remarquera aussi que le dernier TextView
        définit d'autres propriétés. Un style n'est
        que la "base" sur laquelle l'élément est
        construit; on peut ajouter ou même
        surclasser des valeurs existantes dans
        le style en les redéfinissant dans l'élément,
        permettant une plus grande flexibilité.
        
        Finalement, il est bon de se rappeler
        que les styles, étant des valeurs, peuvent
        dépendre de tous les qualificateurs
        usuels tels la taille de l'écran,
        l'orientation ou la langue, ce qui peut
        permettre de mieux spécifier les styles
        pour différents contextes sans devoir
        reconstruire le layout lui-même. -->
	    <TextView
	        android:id="@+id/dayDateNow"
	        style="@style/dayDataStyle"
	        android:text="21 décembre 2012" />
	
	    <TextView
	        android:id="@+id/dayTemperaturesNow"
	        style="@style/dayDataStyle"
	        android:text="0&#176;C à 0&#176;C" />
	
	    <TextView
	        android:id="@+id/dayMoreNow"
	        style="@style/dayDataMoreStyle"
	        android:layout_marginTop="2dp"
	        android:text="Possibilité de pluie de météorites et tremblements de terre." />
    
    </LinearLayout>

</RelativeLayout>